< SQL Fundamental II > 

[[ 7장 ]] 정규식 지원
오라클 10G부터 새롭게 소개되는 정규 표현식은 데이터 가운데 
임의의 패턴을 찾거나 그패턴을 통해 임의의 작업을 수행하고자 
하는 경우 적용할수 있는 기능이다. 

주요 사용 예:
 임의의 문장 가운데 특정 단어를 찾으려고 하는 경우 
 임의의 문장 가운데 URL 주소를 찾으려는 경우 
 임의의 단어 가운데 세번재가 모음은 단어를 찾으려는 경우 
 ^ 즉 부정 와일드 카드 사용 가능 (MS는 월래 됨 ) 
------------------------------------------------------
정규식 기호 설명

물음표(?)는 자기 앞에 나오는 정규 표현식이 0개나 한개인 것과 일치하고,
보통은 한 개의 문자 와 일치할 때 쓰입니다. 
 
더하기(+)는 자기 앞에 나오는 하나 이상의 정규 표현식과 일치합니다.
*와 비슷하게 동작하지만 반드시 하나 이상과 일치합니다. 
 
이스케이프된 "중괄호"(\{ \})는 바로 앞에 나온 정규 표현식의 빈도수를 나타냅니다. 
중괄호를 이스케이프 시키지 않으면 중괄호 문자 그대로 해석되기 때문에 
꼭 이스케이프를 시켜야 합니다. 
 
"[0-9]\{5\}" 는 0에서 9까지의 문자가 정확히 5번 나오는 것을 나타냅니다. 
 
소괄호인 ( )는 정규 표현식 그룹을 묶어줍니다. 
다음에 설명할 "|" 연산자와 같이 쓰면 아주 좋습니다. 
 
| "or" 정규 표현식 연산자는 가능한 문자들중 어떤 것과도 일치합니다. 
 
-------------------------------------------------------------------
conn hr/hr
-> hr 계정으로 실습 진행

특정 패턴을 찾는 regexp_like 함수 
SELECT first_name, last_name 
FROM employees 
WHERE REGEXP_LIKE (first_name, '^Ste(v|ph)en$'); 

 
임의의 문자열에서 존재하는 임의의 패턴의 위치를 찾는 regexp_instr 함수 
SELECT street_address FROM locations; 
 
SELECT street_address, INSTR(street_address,'a') 
FROM locations; 
 
SELECT street_address, REGEXP_INSTR(street_address,'[[:alpha:]]') a 
FROM locations; 

SELECT street_address, REGEXP_INSTR(street_address,'[[:alpha:]]') 
FROM locations; 
->소문자를 기준으로 a가 나올때 까지의 갯수 
 
SELECT street_address, REGEXP_INSTR(street_address,'[^[:alpha:]]') a 
FROM locations; 
 
SELECT street_address, 
REGEXP_INSTR(street_address,'[^[:alpha:]]') 
FROM locations 
WHERE REGEXP_INSTR(street_address,'[^[:alpha:]]')> 1; 

SELECT street_address, SUBSTR(street_address , 5, 10) FROM locations; 
 
--------------------------------------------------------------------------- 
특정  패턴에서  특정  문자열  이전값만  가져오는    regexp_substr  함수
SELECT street_address, 
       REGEXP_SUBSTR(street_address , ' [^ ]+ ') "Road" 
FROM locations; 
 
SELECT street_address,
       REGEXP_SUBSTR(street_address , ' [^ ]+') "Road" 
FROM locations; 

----------------------------------------------------------------------------
백레퍼런스(Backreference) 
 
정규 표현식의 유용한 기능의 하나로 재활용을 위해 
서브표현식을 저장하는 기능이 제공됩니다. 
이 기능을 백레퍼런스(backreferencing)라 부릅니다.
백레퍼런스를 이용하여 패턴을 새로운 위치에 맞교체하거나 
반복적인 단어 또는 문자를 검색하는 등의 고급 대체 
기능을 구현할 수 있습니다. 
서브표현식과 일치하는 문자열은 임시 버퍼에 저장됩니다.
이 버퍼에는 왼쪽에서 오른쪽 순서로 숫자가 매겨지며 \digit 형태로 표현됩니다.
여기서 digit은 1과 9 사이의 숫자를 의미하며 각 숫자에 해당하는 
서브표현식과 매치됩니다. 
 
아래 예제는 서브익스프레션에 대한 백레퍼런스를 이용하여 
Ellen Hildi Smith라는 이름을 Smith,Ellen Hildi로 변환하고 있습니다. 

SELECT REGEXP_REPLACE( 
  'Ellen Hildi Smith', 
  '(.*) (.*) (.*)', '\3, \1 \2') 
FROM dual; 

select
country_name
,regexp_replace(country_name, '(.)', '\1 ')
from countries; 
----------------------------------------------------
⊙ 정규 표현식 추가 예제 
 
select regexp_replace('010 9596 6527','(.{3}) (.{4}) (.{4})','\1-\2-\3') 
from dual; 

select regexp_replace('010 9596 6527','(.{3}) (.{4}) (.{4})','\2 ') 
from dual; 
--> 가운데 4자리 숫자만 출력

SELECT country_name, REGEXP_REPLACE(country_name, '(.)','\1 ') a 
FROM countries; 
 

drop table test1 purge; 
create TABLE test1 
(id number, 
email varchar2(20) 
constraint test1_email_ck CHECK(REGEXP_LIKE(email,'@'))) ; 
--> 정규표현식으로 제약조건 생성
 
insert into test1 values(1,'testid@oracle.com'); 
select * from test1; 
 
insert into test1 values(2,'kingoracle'); (X) 
-> @가 없다. 
 
----------------------------------------------------------------